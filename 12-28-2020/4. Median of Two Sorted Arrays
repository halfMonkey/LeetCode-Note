#4. Median of Two Sorted Arrays
#https://leetcode.com/problems/median-of-two-sorted-arrays/

class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:
        m, n = len(nums1), len(nums2)
        if m > n:
            m, n, nums1, nums2 = n, m, nums2, nums1
        
        imin, imax, half = 0, m, (m+n+1)//2
        maxl = minr = 0
        while imin <= imax:
            i = (imin + imax) // 2
            j = half - i
            if i < m and nums2[j-1] > nums1[i]:
                imin = i + 1
            elif i > 0 and nums1[i-1] > nums2[j]:
                imax = i - 1
                
            else:
                if i == 0: maxl = nums2[j-1]
                elif j == 0: maxl = nums1[i-1]
                else: maxl = max(nums1[i-1], nums2[j-1])
                
                if (m+n) % 2 == 1:
                    return maxl
                
                if i == m: minr = nums2[j]
                elif j == n: minr = nums1[i]
                else: minr = min(nums1[i], nums2[j])
                
                return (maxl + minr) / 2 
        
        return -1