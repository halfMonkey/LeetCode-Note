#286. Walls and Gates
#https://leetcode.com/problems/walls-and-gates/

class Solution:
    def wallsAndGates(self, rooms: List[List[int]]) -> None:
        """
        Do not return anything, modify rooms in-place instead.
        """
        ls = collections.deque()
        GATE = 0
        Empty = 2 ** 31 -1
        
        M, N = len(rooms), len(rooms[0])
        for i in range(M):
            for j in range(N):
                if rooms[i][j] == GATE:
                    ls.append((i,j))
                    
        mvs = [(0,1), (0,-1), (-1,0), (1,0)]
        while ls:
            x, y = ls.popleft()
            for i, j in mvs:
                mx, my = x+i, y+j
                if 0 <= mx < M and 0 <= my < N and rooms[mx][my] == Empty:
                    rooms[mx][my] = rooms[x][y] + 1
                    ls.append((mx,my))
        
        return rooms
            