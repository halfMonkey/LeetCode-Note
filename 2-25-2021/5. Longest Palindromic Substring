#5. Longest Palindromic Substring
#https://leetcode.com/problems/longest-palindromic-substring/

class Solution:
    def longestPalindrome(self, s: str) -> str:
        N = len(s)
        dp = [[0] * N for _ in range(N)]
        ans = ''
        for i in range(N):
            dp[i][i] = 1
            ans = s[i]
        maxL = 1
        for i in range(N-1, -1, -1):
            for j in range(i+1, N):
                if s[i] == s[j]:
                    if j-i == 1 or dp[i+1][j-1]:
                        dp[i][j] = 1
                        curL = j-i + 1
                        if maxL < curL:
                            maxL = curL
                            ans  = s[i:j+1]
        
        return ans
            