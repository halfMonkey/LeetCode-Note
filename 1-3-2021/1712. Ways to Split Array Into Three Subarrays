#1712. Ways to Split Array Into Three Subarrays
#https://leetcode.com/problems/ways-to-split-array-into-three-subarrays/

class Solution:
    def waysToSplit(self, nums: List[int]) -> int:
        L = len(nums)
        
        ls = [0, nums[0]] 
        ans = 0
        for i in range(1, L):
            ls.append(nums[i] + ls[-1])
        
        for i in range(L-2):
            left = ls[i+1]
            rem  = ls[L] -left
            if rem < left * 2: break
            
            first = bisect.bisect_left(ls, left*2, i+2, L)
            last  = bisect.bisect_right(ls, left+rem//2, i+2, L) - 1
            
            ans += max(last-first+1, 0)
        
        return ans % (10**9 + 7)
            