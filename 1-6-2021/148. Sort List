#148. Sort List
#https://leetcode.com/problems/sort-list/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def sortList(self, head: ListNode) -> ListNode:
        def getMid(head):
            mid = None
            while head and head.next:
                mid = mid.next if mid else head
                head = head.next.next
            m = mid.next
            mid.next = None
            return m
        
        
        def merge(l1, l2):
            head = cur = ListNode(0)
            while l1 and l2:
                if l1.val < l2.val:
                    cur.next = l1
                    l1 = l1.next
                else:
                    cur.next = l2
                    l2 = l2.next
                cur = cur.next
            cur.next = l1 if l1 else l2
            return head.next
        
        def sort(head):
            if not (head and head.next):
                return head
            
            mid = getMid(head)
            left = sort(head)
            right = sort(mid)
            return merge(left, right)
        
        
        return sort(head)