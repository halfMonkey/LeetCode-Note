#417. Pacific Atlantic Water Flow
#https://leetcode.com/problems/pacific-atlantic-water-flow/

class Solution:
    def pacificAtlantic(self, matrix: List[List[int]]) -> List[List[int]]:
        if not matrix or not matrix[0]: return []
        pac = set()
        atl = set()
        M, N = len(matrix), len(matrix[0])
        mvs  = [(0,1), (0,-1), (1,0), (-1,0)]
        
        def bfs(v, x, y, m, n):
            for i, j in mvs:
                mx, my = x+i, y+j
                if 0 <= mx < m and 0 <= my < n \
                and (mx, my) not in v and matrix[mx][my] >= matrix[x][y]:
                    v.add((mx,my))
                    bfs(v, mx, my, m, n)
                    
        for i in range(M):
            pac.add((i,0))
            atl.add((i,N-1))
            bfs(pac, i, 0, M, N)
            bfs(atl, i, N-1, M, N)
        
        for i in range(N):
            pac.add((0,i))
            atl.add((M-1,i))
            bfs(pac, 0, i, M, N)
            bfs(atl, M-1, i, M, N)
        
        res = []
        for i in range(M):
            for j in range(N):
                if (i,j) in pac and (i,j) in atl:
                    res.append([i,j])
        
        
        return res