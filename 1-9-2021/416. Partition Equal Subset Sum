#416. Partition Equal Subset Sum
#https://leetcode.com/problems/partition-equal-subset-sum/

class Solution:
    def canPartition(self, nums: List[int]) -> bool:
        total = sum(nums)
        if total % 2 != 0:
            return False
        target = total // 2
        
        L = len(nums)
        dp = [[False] * (target + 1) for _ in range(L+1)]
        dp[0][0] = True
        
        for i in range(1, L+1):
            cur = nums[i-1]
            for j in range(target+1):
                    if j < cur:
                        dp[i][j] = dp[i-1][j]
                    else:
                        dp[i][j] = dp[i-1][j] or dp[i-1][j-cur]
            
        return dp[L][target]
        